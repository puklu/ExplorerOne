{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "OpenOCD-STM32F3",
            "type": "shell",
            "command": "openocd",
            "args": [
                "-f",
                "interface/stlink.cfg",
                "-f",
                "board/stm32f3discovery.cfg",
            ],
            "problemMatcher": [],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },

        {
            "label": "Make",
            "type": "shell",
            "command": "mkdir -p build/${input:platform} && cd build/${input:platform} && cmake ../.. -DPLATFORM=${input:platform} -DUSE_LIBOPENCM3=${input:libopencm3Flag} && make",
            "args": [
            ],
            "problemMatcher": [],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },

        {
            "label": "Make-release (no logging to console)",
            "type": "shell",
            "command": "mkdir -p build/release/${input:platform} && cd build/release/${input:platform} && cmake ../../.. -DPLATFORM=${input:platform} -DLOG_LEVEL=0 && make",
            "args": [
            ],
            "problemMatcher": [],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },

        {
            "label": "Debug",
            "type": "shell",
            "dependsOn": "Make",
            "command": "mkdir -p build/${input:platform} && cd build/${input:platform} && make debug",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "Flash",
            "type": "shell",
            "dependsOn": "Make",
            "command": "mkdir -p build/${input:platform} && cd build/${input:platform} && make flash",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "Flash-release",
            "type": "shell",
            "command": "mkdir -p build/release/${input:platform} && cd build/release/${input:platform} && cmake ../../.. -DPLATFORM=${input:platform} && make flash",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "Make-test",
            "type": "shell",
            "command": "sh",
            "args": [
                "-c",
                "mkdir -p build/${input:platform} && cd build/${input:platform} && cmake -DBUILD_TESTS=ON -DTEST_NAME=${input:testName} ../.. -DPLATFORM=${input:platform} -DUSE_LIBOPENCM3=${input:libopencm3Flag} && make"
            ],
            "problemMatcher": [],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },

        {
            "label": "Flash-test",
            "type": "shell",
            "dependsOn": "Make-test",
            "command": "mkdir -p build/${input:platform} && cd build/${input:platform} && make flash_test",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "debug-visual",
            "type": "shell",
            "command": "mkdir -p build/${input:platform} && cd build/${input:platform} && cmake ../.. -DPLATFORM=${input:platform} && make debug",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": false,
            },
            "presentation": {
                "reveal": "never",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true,
                "close": true
            }
        },

        {
            "label": "debug-cleanup",
            "type": "shell",
            "command": "pkill -f gdb && pkill openocd",
            "args": [ 
            ],
            "problemMatcher": [],
            "presentation": {
                "reveal": "never",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true,
                "close": true
            }
        },

        {
            "label": "serial-monitor",
            "type": "shell",
            "command": "minicom",
            "args": ["-D", "/dev/ttyACM1", "-b", "11520"],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "generate state machine UML diagram",
            "type": "shell",
            "command": "java -Djava.awt.headless=true -jar /usr/local/bin/plantuml.jar -tsvg docs/statemachine.uml",
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "Generate documentation",
            "type": "shell",
            "command": "cd build/${input:platform} && make doxygen",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },
    ],
    "inputs": [
        {
            "id": "testName",
            "type": "pickString",
            "description": "Select the test which you want to build",
            "options": [
                "basicTimer",
                "blinky",
                "drive",
                "generalPurposeTimer",
                "interrupt",
                "libopencm3_systick",
                "pwm",
                "systickTimer",
                "usart"
            ],
        },
        {
            "id": "platform",
            "type": "pickString",
            "description": "Select the target platform",
            "options": [
                "stm32f3discovery",
                "not-implemented"
            ],
            "default": "stm32f3discovery"
        },
        {
            "id": "libopencm3Flag",
            "type": "pickString",
            "description": "Turn on libopencm3?",
            "options": [
                "OFF",
                "ON"
            ],
            "default": "OFF"
        }
    ]
}
