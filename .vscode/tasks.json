{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "OpenOCD",
            "type": "shell",
            "command": "openocd",
            "args": [
                "-f",
                "interface/stlink.cfg",
                "-f",
                "board/stm32f3discovery.cfg",
            ],
            "problemMatcher": [],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },

        {
            "label": "make",
            "type": "shell",
            "command": "cd build && cmake .. && make",
            "args": [
            ],
            "problemMatcher": [],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },

        {
            "label": "make-test",
            "type": "shell",
            "command": "sh",
            
            "args": [
                "-c",
                "cd build && cmake -DBUILD_TESTS=ON -DTEST_NAME=${input:testName} .. && make"
            ],
            "problemMatcher": [],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },

        {
            "label": "debug",
            "type": "shell",
            "command": "cd build && cmake .. && make debug",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "flash",
            "type": "shell",
            "command": "cd build && cmake .. && make flash",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "flash-test",
            "type": "shell",
            "dependsOn": "make-test",
            "command": "cd build && make flash_test",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "debug-visual",
            "type": "shell",
            "command": "cd build && cmake .. && make debug",
            "args": [
            ],
            "problemMatcher": ["$gcc"],
            "isBackground": true,
            "group": {
                "kind": "build",
                "isDefault": false,
            },
            "presentation": {
                "reveal": "never",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true,
                "close": true
            }
        },

        {
            "label": "debug-cleanup",
            "type": "shell",
            "command": "pkill -f gdb && pkill openocd",
            "args": [ 
            ],
            "problemMatcher": [],
            "presentation": {
                "reveal": "never",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": false,
                "clear": true,
                "close": true
            }
        },

        {
            "label": "serial-monitor",
            "type": "shell",
            "command": "minicom",
            "args": ["-D", "/dev/ttyACM1", "-b", "11520"],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
        },

        {
            "label": "generate state machine UML diagram",
            "type": "shell",
            "command": "java -Djava.awt.headless=true -jar /usr/local/bin/plantuml.jar -tsvg docs/statemachine.uml",
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            },
        }
    ],
    "inputs": [
        {
            "id": "testName",
            "type": "promptString",
            "description": "Enter the test name which you want to build",
        }
    ]
}
