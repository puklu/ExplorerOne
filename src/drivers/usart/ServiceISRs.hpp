/**
 * @file ServiceISRs.hpp
 * @brief Header file declaring ISR handlers for USART and UART peripherals.
 *
 * This file contains declarations for Interrupt Service Routines (ISRs) that 
 * handle interrupts generated by various USART and UART peripherals. These 
 * ISRs are responsible for managing data transmission and reception/
 */


#pragma once


/**
 * @brief Handles USART service ISR for printing operations.
 */
void UsartServiceISR_Printing();


/**
 * @brief Interrupt Service Routine handler for USART1.
 *
 * Manages USART1-specific interrupt handling by invoking the necessary logic
 * for data transmission or reception.
 */
void Usart1ServiceISR();


/**
 * @brief Interrupt Service Routine handler for USART2.
 *
 * Manages USART2-specific interrupt handling by invoking the necessary logic
 * for data transmission or reception.
 */
void Usart2ServiceISR();


/**
 * @brief Interrupt Service Routine handler for USART3.
 *
 * Manages USART3-specific interrupt handling by invoking the necessary logic
 * for data transmission or reception.
 */
void Usart3ServiceISR();


/**
 * @brief Interrupt Service Routine handler for UART5.
 *
 * Manages UART5-specific interrupt handling by invoking the necessary logic
 * for data transmission or reception.
 */
void Uart4ServiceISR();


/**
 * @brief Interrupt Service Routine handler for UART5.
 *
 * Manages UART5-specific interrupt handling by invoking the necessary logic
 * for data transmission or reception.
 */
void Uart5ServiceISR();


/**
 * @brief General USART Service ISR handler.
 *
 * This function provides a unified ISR handler for multiple USART/UART peripherals.
 * It delegates the specific processing tasks to more specialized functions.
 */
void UsartServiceISR();
