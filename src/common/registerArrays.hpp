/**
 * @file File for all arrays used to hold address and masks
 * defined in header file provided by stm so that the arrays
 * can be conveniently used by the interface without having to
 * deal with crude registers.
 */

#pragma once

#include "defines.hpp"
#include "stm32f303xc.h"

namespace IO
{

inline GPIO_TypeDef *const aPorts[IO_PORT_COUNT] = {
    GPIOA, GPIOB, GPIOC, GPIOD, GPIOE, GPIOF,
};

inline long unsigned int const aPortEnableRegisters[IO_PORT_COUNT] = {
    RCC_AHBENR_GPIOAEN, RCC_AHBENR_GPIOBEN, RCC_AHBENR_GPIOCEN,
    RCC_AHBENR_GPIODEN, RCC_AHBENR_GPIOEEN, RCC_AHBENR_GPIOFEN};

inline long unsigned int const aModeRegisterBits[IO_BITS_PER_REGISTER] = {
    GPIO_MODER_MODER0_0,  GPIO_MODER_MODER0_1,  GPIO_MODER_MODER1_0,
    GPIO_MODER_MODER1_1,  GPIO_MODER_MODER2_0,  GPIO_MODER_MODER2_1,
    GPIO_MODER_MODER3_0,  GPIO_MODER_MODER3_1,  GPIO_MODER_MODER4_0,
    GPIO_MODER_MODER4_1,  GPIO_MODER_MODER5_0,  GPIO_MODER_MODER5_1,
    GPIO_MODER_MODER6_0,  GPIO_MODER_MODER6_1,  GPIO_MODER_MODER7_0,
    GPIO_MODER_MODER7_1,  GPIO_MODER_MODER8_0,  GPIO_MODER_MODER8_1,
    GPIO_MODER_MODER9_0,  GPIO_MODER_MODER9_1,  GPIO_MODER_MODER10_0,
    GPIO_MODER_MODER10_1, GPIO_MODER_MODER11_0, GPIO_MODER_MODER11_1,
    GPIO_MODER_MODER12_0, GPIO_MODER_MODER12_1, GPIO_MODER_MODER13_0,
    GPIO_MODER_MODER13_1, GPIO_MODER_MODER14_0, GPIO_MODER_MODER14_1,
    GPIO_MODER_MODER15_0, GPIO_MODER_MODER15_1,
};

inline long unsigned int const aOutputTypeRegisterBits[IO_PIN_COUNT_PER_PORT] =
    {GPIO_OTYPER_OT_0,  GPIO_OTYPER_OT_1,  GPIO_OTYPER_OT_2,
     GPIO_OTYPER_OT_3,  GPIO_OTYPER_OT_4,  GPIO_OTYPER_OT_5,
     GPIO_OTYPER_OT_6,  GPIO_OTYPER_OT_7,  GPIO_OTYPER_OT_8,
     GPIO_OTYPER_OT_9,  GPIO_OTYPER_OT_10, GPIO_OTYPER_OT_11,
     GPIO_OTYPER_OT_12, GPIO_OTYPER_OT_13, GPIO_OTYPER_OT_14,
     GPIO_OTYPER_OT_15};

inline long unsigned int const aOutputSpeedRegisterBits[IO_BITS_PER_REGISTER] =
    {
        GPIO_OSPEEDER_OSPEEDR0_0,  GPIO_OSPEEDER_OSPEEDR0_1,
        GPIO_OSPEEDER_OSPEEDR1_0,  GPIO_OSPEEDER_OSPEEDR1_1,
        GPIO_OSPEEDER_OSPEEDR2_0,  GPIO_OSPEEDER_OSPEEDR2_1,
        GPIO_OSPEEDER_OSPEEDR3_0,  GPIO_OSPEEDER_OSPEEDR3_1,
        GPIO_OSPEEDER_OSPEEDR4_0,  GPIO_OSPEEDER_OSPEEDR4_1,
        GPIO_OSPEEDER_OSPEEDR5_0,  GPIO_OSPEEDER_OSPEEDR5_1,
        GPIO_OSPEEDER_OSPEEDR6_0,  GPIO_OSPEEDER_OSPEEDR6_1,
        GPIO_OSPEEDER_OSPEEDR7_0,  GPIO_OSPEEDER_OSPEEDR7_1,
        GPIO_OSPEEDER_OSPEEDR8_0,  GPIO_OSPEEDER_OSPEEDR8_1,
        GPIO_OSPEEDER_OSPEEDR9_0,  GPIO_OSPEEDER_OSPEEDR9_1,
        GPIO_OSPEEDER_OSPEEDR10_0, GPIO_OSPEEDER_OSPEEDR10_1,
        GPIO_OSPEEDER_OSPEEDR11_0, GPIO_OSPEEDER_OSPEEDR11_1,
        GPIO_OSPEEDER_OSPEEDR12_0, GPIO_OSPEEDER_OSPEEDR12_1,
        GPIO_OSPEEDER_OSPEEDR13_0, GPIO_OSPEEDER_OSPEEDR13_1,
        GPIO_OSPEEDER_OSPEEDR14_0, GPIO_OSPEEDER_OSPEEDR14_1,
        GPIO_OSPEEDER_OSPEEDR15_0, GPIO_OSPEEDER_OSPEEDR15_1,
};

inline long unsigned int const
    aPullupPulldownRegisterBits[IO_BITS_PER_REGISTER] = {
        GPIO_PUPDR_PUPDR0_0,  GPIO_PUPDR_PUPDR0_1,  GPIO_PUPDR_PUPDR1_0,
        GPIO_PUPDR_PUPDR1_1,  GPIO_PUPDR_PUPDR2_0,  GPIO_PUPDR_PUPDR2_1,
        GPIO_PUPDR_PUPDR3_0,  GPIO_PUPDR_PUPDR3_1,  GPIO_PUPDR_PUPDR4_0,
        GPIO_PUPDR_PUPDR4_1,  GPIO_PUPDR_PUPDR5_0,  GPIO_PUPDR_PUPDR5_1,
        GPIO_PUPDR_PUPDR6_0,  GPIO_PUPDR_PUPDR6_1,  GPIO_PUPDR_PUPDR7_0,
        GPIO_PUPDR_PUPDR7_1,  GPIO_PUPDR_PUPDR8_0,  GPIO_PUPDR_PUPDR8_1,
        GPIO_PUPDR_PUPDR9_0,  GPIO_PUPDR_PUPDR9_1,  GPIO_PUPDR_PUPDR10_0,
        GPIO_PUPDR_PUPDR10_1, GPIO_PUPDR_PUPDR11_0, GPIO_PUPDR_PUPDR11_1,
        GPIO_PUPDR_PUPDR12_0, GPIO_PUPDR_PUPDR12_1, GPIO_PUPDR_PUPDR13_0,
        GPIO_PUPDR_PUPDR13_1, GPIO_PUPDR_PUPDR14_0, GPIO_PUPDR_PUPDR14_1,
        GPIO_PUPDR_PUPDR15_0, GPIO_PUPDR_PUPDR15_1,
};

inline long unsigned int const aInputDataRegisterBits[IO_PIN_COUNT_PER_PORT] = {
    GPIO_IDR_0,  GPIO_IDR_1,  GPIO_IDR_2,  GPIO_IDR_3,
    GPIO_IDR_4,  GPIO_IDR_5,  GPIO_IDR_6,  GPIO_IDR_7,
    GPIO_IDR_8,  GPIO_IDR_9,  GPIO_IDR_10, GPIO_IDR_11,
    GPIO_IDR_12, GPIO_IDR_13, GPIO_IDR_14, GPIO_IDR_15,
};

inline long unsigned int const aOutputDataRegisterBits[IO_PIN_COUNT_PER_PORT] =
    {
        GPIO_ODR_0,  GPIO_ODR_1,  GPIO_ODR_2,  GPIO_ODR_3,
        GPIO_ODR_4,  GPIO_ODR_5,  GPIO_ODR_6,  GPIO_ODR_7,
        GPIO_ODR_8,  GPIO_ODR_9,  GPIO_ODR_10, GPIO_ODR_11,
        GPIO_ODR_12, GPIO_ODR_13, GPIO_ODR_14, GPIO_ODR_15,
};

inline long unsigned int const aExtiImrRegisterBits[IO_PIN_COUNT_PER_PORT] =
    {
        // Using only 16 lines for now, each EXTI corresponds to each pin number
        // for eg: EXTI0 corresponds to pin 0 of each port. Which port it belongs
        // to is set in SYSCFG
        EXTI_IMR_MR0,
        EXTI_IMR_MR1,
        EXTI_IMR_MR2,
        EXTI_IMR_MR3,
        EXTI_IMR_MR4,
        EXTI_IMR_MR5,
        EXTI_IMR_MR6,
        EXTI_IMR_MR7,
        EXTI_IMR_MR8,
        EXTI_IMR_MR9,
        EXTI_IMR_MR10,
        EXTI_IMR_MR11,
        EXTI_IMR_MR12,
        EXTI_IMR_MR13,
        EXTI_IMR_MR14,
        EXTI_IMR_MR15,
        // EXTI_IMR_MR16,
        // EXTI_IMR_MR17,
        // EXTI_IMR_MR18,
        // EXTI_IMR_MR19,
        // EXTI_IMR_MR20,
        // EXTI_IMR_MR20,
        // EXTI_IMR_MR21,
        // EXTI_IMR_MR22,
        // EXTI_IMR_MR23,
        // EXTI_IMR_MR24,
        // EXTI_IMR_MR25,
        // EXTI_IMR_MR26,
        // EXTI_IMR_MR27,
        // EXTI_IMR_MR28,
        // EXTI_IMR_MR29,
        // EXTI_IMR_MR30,   
        // EXTI_IMR_MR31,
        // EXTI_IMR2_MR32,
        // EXTI_IMR2_MR33,
        // EXTI_IMR2_MR34,
        // EXTI_IMR2_MR35,
};

inline IRQn_Type aExtiIrqNumbers[IO_PIN_COUNT_PER_PORT] = {
    EXTI0_IRQn, EXTI1_IRQn, EXTI2_TSC_IRQn, EXTI3_IRQn, EXTI4_IRQn,
    // EXTI5 TO EXTI9 share an IRQ
    EXTI9_5_IRQn, EXTI9_5_IRQn, EXTI9_5_IRQn, EXTI9_5_IRQn, EXTI9_5_IRQn,
    // EXTI15 TO EXTI15 share an IRQ
    EXTI15_10_IRQn, EXTI15_10_IRQn, EXTI15_10_IRQn, EXTI15_10_IRQn,
    EXTI15_10_IRQn, EXTI15_10_IRQn
};


// inline long unsigned int const aExtiRisingEdgeTriggerRegisterBits[IO_EXTI_LINES_COUNT] =
//     {   
//         EXTI_RTSR_TR0, EXTI_RTSR_TR1 , EXTI_RTSR_TR2, EXTI_RTSR_TR3, EXTI_RTSR_TR4,
//         EXTI_RTSR_TR5, EXTI_RTSR_TR6 , EXTI_RTSR_TR7, EXTI_RTSR_TR8, EXTI_RTSR_TR9,
//         EXTI_RTSR_TR10, EXTI_RTSR_TR11 , EXTI_RTSR_TR12, EXTI_RTSR_TR13, EXTI_RTSR_TR14,
//         EXTI_RTSR_TR11, EXTI_RTSR_TR12 , EXTI_RTSR_TR13, EXTI_RTSR_TR14, EXTI_RTSR_TR15,
//         EXTI_RTSR_TR16, EXTI_RTSR_TR17 , EXTI_RTSR_TR18, EXTI_RTSR_TR19, EXTI_RTSR_TR20,
//         EXTI_RTSR_TR21, EXTI_RTSR_TR22 , EXTI_RTSR_TR29, EXTI_RTSR_TR30,
//         EXTI_RTSR_TR31, EXTI_RTSR2_TR32, EXTI_RTSR2_TR33, 
//     };
  

inline long unsigned int const aSyscfgExtiRegisterBits[IO_EXTI_LINES_COUNT]
    {
        SYSCFG_EXTICR1_EXTI0,
        SYSCFG_EXTICR1_EXTI1,
        SYSCFG_EXTICR1_EXTI2,
        SYSCFG_EXTICR1_EXTI3,
        SYSCFG_EXTICR2_EXTI4,
        SYSCFG_EXTICR2_EXTI5,
        SYSCFG_EXTICR2_EXTI6,
        SYSCFG_EXTICR2_EXTI7,
        SYSCFG_EXTICR3_EXTI8,
        SYSCFG_EXTICR3_EXTI9,
        SYSCFG_EXTICR3_EXTI10,
        SYSCFG_EXTICR3_EXTI11,
        SYSCFG_EXTICR4_EXTI12,
        SYSCFG_EXTICR4_EXTI13,
        SYSCFG_EXTICR4_EXTI14,
        SYSCFG_EXTICR4_EXTI15,
    };

inline long unsigned int const aUsartEnableRegistersMasks[COUNT_OF_USARTS] = {
    RCC_APB2ENR_USART1EN, RCC_APB1ENR_USART2EN, RCC_APB1ENR_USART3EN,
    RCC_APB1ENR_UART4EN, RCC_APB1ENR_UART5EN};

}  // namespace IO
